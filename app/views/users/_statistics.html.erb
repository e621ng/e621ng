<div class="stats-section">
  <div class="profile-avatar">
    <%= user_avatar @user %>
  </div>
  <div class="profile-stats">
    <h1><%= link_to_user @user %></h1>
    <table width="100%" class="user-statistics">
      <tbody>
      <tr>
        <th>Join Date</th>
        <td><%= presenter.join_date %></td>
        <th>Feedback</th>
        <td>
          <%= presenter.feedbacks %>
          <%= link_to("List", user_feedbacks_path(search: { user_id: @user.id })) %>
          <% if CurrentUser.is_moderator? && @user.feedback.count.zero? %>
            | <%= link_to("Create", new_user_feedback_path(user_feedback: { user_id: @user.id })) %>
          <% end %>
        </td>
      </tr>

      <tr>
        <th>Level</th>
        <td><%= "(Unactivated)" unless user.is_verified? %> <%= presenter.level %></td>
        <th>Permissions</th>
        <td><%= presenter.permissions %></td>
      </tr>

      <% if user.is_banned? && user.recent_ban %>
        <tr>
          <th>Ban reason</th>
          <td class="dtext-container"><%= format_text presenter.ban_reason %></td>
        </tr>
      <% end %>

      <tr>
        <th>Posts</th>
        <td>
          <%= presenter.active_upload_count(self) %>
          <% if CurrentUser.is_moderator? %>
            [<%= link_to "sample", posts_path(:tags => "user:#{user.name} order:random limit:300") %>]
          <% end %>
          (<%= link_to "comments on", comments_path(group_by: :comment, search: {poster_id: user.id}) %>)
          <% if CurrentUser.is_moderator? %>
            (<%= link_to "votes", action: "index", controller: "post_votes", search: { user_name: user.name } %>)
          <% end %>
        </td>
        <th>Upload Limit</th>
        <td>
          <%= presenter.upload_limit(self) %>
          <% if CurrentUser.user.id == user.id  %>
            (<%= link_to "help", upload_limit_users_path %>)
          <% else %>
            (<%= link_to "help", wiki_page_path(id: "upload_limit") %>)
          <% end %>
        </td>
      </tr>

      <tr>
        <th>Deleted/Replaced Posts</th>
        <td>
          <%= presenter.deleted_upload_count(self) %>
          <% if CurrentUser.is_moderator? %>
            [<%= link_to "sample", posts_path(:tags => "user:#{user.name} order:random limit:300 status:deleted") %>]
          <% end %>
          / <%= presenter.replaced_upload_count(self) %>
        </td>
        <th>Post Changes</th>
        <td>
          <%= presenter.post_version_count(self) %>
          <% if CurrentUser.is_moderator? && UserRevert.can_revert?(user) %>
            [<%= link_to "revert all", new_user_revert_path(user_id: user.id) %>]
          <% end %>
        </td>
      </tr>

      <tr>
        <th>Favorites</th>
        <td>
          <%= presenter.favorite_count(self) %>
          <% if CurrentUser.is_moderator? %>
            [<%= link_to "sample", posts_path(:tags => "fav:#{user.name} order:random limit:300") %>]
          <% end %>
        </td>
        <th>Wiki Page Changes</th>
        <td><%= presenter.wiki_page_version_count(self) %></td>
      </tr>

      <tr>
        <th>Forum Posts</th>
        <td><%= presenter.forum_post_count(self) %></td>
        <th>Note Changes</th>
        <td><%= presenter.note_version_count(self) %> on <%= presenter.noted_posts_count(self) %> posts</td>
      </tr>

      <tr>
        <th>Comments</th>
        <td><%= presenter.comment_count(self) %> on <%= presenter.commented_posts_count(self) %> posts
          <% if CurrentUser.is_moderator? %>
            (<%= link_to "votes", action: "index", controller: "comment_votes", search: { user_name: user.name } %>)
          <% end %></td>
        <th>Artist Changes</th>
        <td><%= presenter.artist_version_count(self) %></td>
      </tr>

      <tr>
        <th>Approvals</th>
        <td><%= presenter.approval_count(self) %></td>
        <th>Pool Changes</th>
        <td><%= presenter.pool_version_count(self) %></td>
      </tr>


      <% if CurrentUser.user.id == user.id || CurrentUser.is_janitor? %>
        <tr>
          <th>Appeals</th>
          <td><%= presenter.appeal_count(self) %></td>
          <th>Flags</th>
          <td><%= presenter.flag_count(self) %></td>
        </tr>
      <% end %>

      <% if CurrentUser.id == user.id %>
        <tr>
          <th>API Key</th>
          <td>
            <%= link_to (CurrentUser.api_key ? "View" : "Generate"), user_api_key_path(CurrentUser.user) %>
            (<%= link_to "help", help_page_path(id: "api") %>)
          </td>
          <th>API Limits</th>
          <td>
            <%= CurrentUser.user.remaining_api_limit %>
            / <%= CurrentUser.user.api_burst_limit %> <span class="hint">(may not be up to date)</span>
          </td>
        </tr>
      <% end %>

      <% if (CurrentUser.id == user.id || CurrentUser.is_janitor?) %>
        <tr>
          <% if presenter.previous_names(self).present? %>
          <th>Previous Names</th>
          <td><%= presenter.previous_names(self) %></td>
          <% end %>
          <% if CurrentUser.is_admin? %>
          <th>Email</th>
          <td><%= user.email %></td>
          <% end %>
        </tr>
      <% end %>
      <% if CurrentUser.is_moderator? %>
        <tr>
          <th>Last IP</th>
          <td><%= link_to_ip(user.last_ip_addr) %></td>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
</div>
