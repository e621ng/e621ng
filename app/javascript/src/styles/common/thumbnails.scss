// Posts container
// May or may not exist on some pages
section.posts-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.5rem;

  // Defaults to 150px elsewhere
  --thumb-image-size: 200px;
  --thumb-mobile-size: 33vw;

  @include window-larger-than(800px) {
    grid-template-columns: repeat(auto-fill, minmax(var(--thumb-image-size), 1fr));
  }

  h2.posts-container-header {
    grid-column: -1 / 1;
  }

  .no-results {
    grid-column: -1 / 1;
  }
}


// Thumbnail proper
article.thumbnail {
  display: inline-flex;
  flex-flow: column;
  justify-self: center; // Center the thumbnail in the grid cell
  position: relative;   // Position badges correctly
  overflow: hidden;

  // Chrome bug that prevents the thumbnail card from spanning the full width
  width: 100%;
  max-width: min(var(--thumb-mobile-size, 33vw), var(--thumb-image-size, 150px));

  // Used in conjunction with setting the link element width and height
  // in order to ensure that the thumbnail always has the same size.
  @include window-larger-than(50rem) {
    min-width: var(--thumb-image-size, 150px);
    min-height: calc(var(--thumb-image-size, 150px) + 1rem);

    width: unset;
  }

  // Badges
  &[data-tags~=animated] > a:before { @include preview-type-badge("ANIM"); }
  &[data-file-ext=webm] > a:before { @include preview-type-badge("WEBM"); }
  &[data-file-ext=mp4] > a:before { @include preview-type-badge("MP4"); }

  a {
    text-align: center; // Fixes an issue with blacklisted pool thumbnails
    width: 100%;
    height: 100%;
    background: #0003;

    // Fill the entire thumbnail
    flex: 1;

    // See min-width and min-height above
    max-width: min(var(--thumb-mobile-size, 33vw), var(--thumb-image-size, 150px));
    max-height: min(var(--thumb-mobile-size, 33vw), var(--thumb-image-size, 150px));

    @include window-larger-than(50rem) {
      max-width: var(--thumb-image-size, 150px);
      max-height: calc(var(--thumb-image-size, 150px) + 1rem);
    }
  }

  img {
    box-sizing: border-box; // Prevent the border from resizing the entire element
    height: 100%;
    width: 100%;
    object-fit: cover;

    border-radius: $border-radius-half $border-radius-half 0 0;
    pointer-events: none;   // Should probably just fix the click events, huh
  }

  .desc {
    display: flex;
    gap: 0.25em;
    justify-content: center;
    height: 1rem;

    background-color: themed("color-section-lighten-5");
    border-radius: 0 0 $border-radius-half $border-radius-half;

    .rating { font-weight: 700; }
    & > a { text-align: center; } // Pool names
    .favorites, .comments { color: palette("text-white") }
  }

  // Color the rating letters
  @each $name, $color in ("e": "red", "q": "yellow", "s": "green") {
    &[data-rating=#{$name}] .desc .rating { color: palette("text-#{$color}"); }
  }

  // Post matches blacklist
  &.filter-matches .desc {
    background-color: var(--palette-background-red);
  }
}


article.thumbnail.deleted::before {
  content: "deleted";

  position: absolute;
  top: 0;
  bottom: 1rem;
  left: 0;
  right: 0;

  display: flex;
  justify-content: center;
  align-items: center;

  font-family: "Roboto", Verdana, Geneva, sans-serif;;
  font-size: calc(var(--thumb-image-size, 150px) / 5);
  text-shadow: 0 0 1rem black;
  pointer-events: none;
}


// I have absolutely no idea what this
// does or when it might be triggered.
article.thumbnail.current-post {
  background-color: $post-preview-highlight-background;
}


// Nightmarish mess ahead
// Set thumbnail borders based on status
article.thumbnail {
  &.has-children img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color;
  }

  &.has-parent img {
    border: 2px solid transparent;
    border-color: $preview-has-parent-color;
  }

  &.has-children.has-parent img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color $preview-has-parent-color $preview-has-parent-color $preview-has-children-color;
  }


  &.pending img,
  &.flagged img {
    border: 2px solid transparent;
    border-color: $preview-pending-color;
  }

  &.has-children.pending img,
  &.has-children.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color $preview-pending-color $preview-pending-color $preview-has-children-color;
  }

  &.has-parent.pending img,
  &.has-parent.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-parent-color $preview-pending-color $preview-pending-color $preview-has-parent-color;
  }

  &.has-children.has-parent.pending img,
  &.has-children.has-parent.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color $preview-pending-color $preview-pending-color $preview-has-parent-color;
  }
}

// Flagged posts have red borders for approvers.
body[data-user-can-approve-posts="true"] article.thumbnail {
  &.flagged img {
    border: 2px solid transparent;
    border-color: $preview-flagged-color;
  }

  &.has-children.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color $preview-flagged-color $preview-flagged-color $preview-has-children-color;
  }

  &.has-parent.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-parent-color $preview-flagged-color $preview-flagged-color $preview-has-parent-color;
  }

  &.has-children.has-parent.flagged img {
    border: 2px solid transparent;
    border-color: $preview-has-children-color $preview-flagged-color $preview-flagged-color $preview-has-parent-color;
  }
}

body[data-st-contain="true"] article.thumbnail img {
  object-fit: contain;
}


// Thumbnail size and spacing
body[data-st-size="s"] section.posts-container {
  --thumb-image-size: 150px;
  --thumb-mobile-size: 25vw;

  @include window-smaller-than(50rem) {
    grid-template-columns: repeat(4, 1fr);
  }
}

body[data-st-size="l"] section.posts-container {
  --thumb-image-size: 256px;
  --thumb-mobile-size: 50vw;

  @include window-smaller-than(50rem) {
    grid-template-columns: repeat(2, 1fr);
  }
}
